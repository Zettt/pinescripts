// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Zettt
// 2021

//@version=5
indicator('Peak Reversal v2', shorttitle='Peak Reversal v2', overlay=true)

showOnlyFirstSignal = input.bool(title='Show Only First Signal', defval=true, tooltip='If checked, only the first signal after a reset will be shown.')
keltnerEMAlength = input.int(title='Keltner Channel EMA Length', defval=21, minval=1, tooltip='The length of the EMA used for the Keltner Channels.')
tightKeltnerMultiplier = input.float(title='Tight Multiplier', defval=1.125, minval=1, tooltip='Users have three bands to choose from: Tight, Normal, and Extreme. This sets the multiplier for the Tight band.')
keltnerMultiplier = input.float(title='Normal Multiplier', defval=2.25, minval=1)
extremePeakMultiplier = input.float(title='Extreme Multiplier', defval=3.375, minval=1)
showMeanEMA = input.bool(title='Show Mean EMA?', defval=false, tooltip='Will plot the Channel EMA (mean) in the middle of the bands.')
showTightBand = input.bool(title='Show Tight Band?', defval=false)
showNormalBand = input.bool(title='Show Normal Band?', defval=true)
showExtremeBand = input.bool(title='Show Extreme Band?', defval=true)
showDeviations = input.bool(title='Show Mean Deviations?', defval=true, tooltip='Indicates when a candle starts going outside the bands.')
showBandCross = input.bool(title='Show Band Crosses?', defval=true, tooltip='Show when candles cross bands.')
showFreeBars = input.bool(title='Show Free Bars?', defval=false, tooltip='Highlights bars where the entire candle is outside of the selected band, which can indicate extreme momentum.')
bandsToUse = input.string(title='Bands to Use', defval='Normal', options=['Tight', 'Normal', 'Extreme'], tooltip='Which of the bands will be used for crosses and free bars.')
signalSource = input.string(title='Signal Source', defval='Wick', options=['Wick', 'Close'], tooltip='Choose the source for cross signals: "Wick" (high/low) or "Close" (close price).')

// calculate Keltner bands
atrlength = 14
keltnerEMA = ta.ema(close, keltnerEMAlength)

[tightKeltnerMA, upTightKeltnerBand, downTightKeltnerBand] = ta.kc(close, keltnerEMAlength, tightKeltnerMultiplier)
[keltnerMA, upKeltnerBand, downKeltnerBand] = ta.kc(close, keltnerEMAlength, keltnerMultiplier)
[extremeKeltnerMA, upExtremeKeltnerBand, downExtremeKeltnerBand] = ta.kc(close, keltnerEMAlength, extremePeakMultiplier)


// plot bands
plot(showMeanEMA ? keltnerMA : na, title='Keltner Channel EMA (Mean)', color=color.new(#BB6083, 40), linewidth=1)
plot(showTightBand ? upTightKeltnerBand : na, title='Tight Upper Band', color=color.new(#DD8EAD, 30), linewidth=1)
plot(showTightBand ? downTightKeltnerBand : na, title='Tight Lower Band', color=color.new(#DD8EAD, 30), linewidth=1)
plot(showNormalBand ? upKeltnerBand : na, title='Normal Upper Band', color=color.new(#DD8EAD, 40), linewidth=1)
plot(showNormalBand ? downKeltnerBand : na, title='Normal Lower Band', color=color.new(#DD8EAD, 40), linewidth=1)
plot(showExtremeBand ? upExtremeKeltnerBand : na, title='Extreme Upper Band', color=color.new(#DD8EAD, 50), linewidth=1)
plot(showExtremeBand ? downExtremeKeltnerBand : na, title='Extreme Lower Band', color=color.new(#DD8EAD, 50), linewidth=1)

// plot mean deivations
// outside the upper band
firstFreeBarUp = if bandsToUse == 'Tight'
    high <= upTightKeltnerBand and close <= upTightKeltnerBand
else if bandsToUse == 'Normal'
    high <= upKeltnerBand and close <= upKeltnerBand
else if bandsToUse == 'Extreme'
    high <= upExtremeKeltnerBand and close <= upExtremeKeltnerBand
numFreeBarsUp = ta.barssince(firstFreeBarUp)

color colorBarUp = na

if numFreeBarsUp > 5
    colorBarUp := #b71c1c
    colorBarUp
else if numFreeBarsUp > 2
    colorBarUp := #ef5350
    colorBarUp
else if numFreeBarsUp > 0
    colorBarUp := #ef9a9a
    colorBarUp
else
    colorBarUp := na
    colorBarUp

barcolor(showDeviations ? colorBarUp : na, title='Mean Deviations Up')

// outside lower band
firstFreeBarDown = if bandsToUse == 'Tight'
    low >= downTightKeltnerBand and close >= downTightKeltnerBand
else if bandsToUse == 'Normal'
    low >= downKeltnerBand and close >= downKeltnerBand
else if bandsToUse == 'Extreme'
    low >= downExtremeKeltnerBand and close >= downExtremeKeltnerBand
// firstFreeBarDown = 
numFreeBarsDown = ta.barssince(firstFreeBarDown)

color colorBarDown = na

if numFreeBarsDown > 5
    colorBarDown := #1b5e20
    colorBarDown
else if numFreeBarsDown > 2
    colorBarDown := #66bb6a
    colorBarDown
else if numFreeBarsDown > 0
    colorBarDown := #a5d6a7
    colorBarDown
else
    colorBarDown := na
    colorBarDown

barcolor(showDeviations ? colorBarDown : na, title='Mean Deviations Down')


// Plot band crosses

longCrossCandle = signalSource == 'Wick' ? high : close
shortCrossCandle = signalSource == 'Wick' ? low : close

longCross = if bandsToUse == 'Tight'
    longCrossCandle >= upTightKeltnerBand
else if bandsToUse == 'Normal'
    longCrossCandle >= upKeltnerBand
else if bandsToUse == 'Extreme'
    longCrossCandle >= upExtremeKeltnerBand

shortCross = if bandsToUse == 'Tight'
    shortCrossCandle <= downTightKeltnerBand
else if bandsToUse == 'Normal'
    shortCrossCandle <= downKeltnerBand
else if bandsToUse == 'Extreme'
    shortCrossCandle <= downExtremeKeltnerBand

showlongCross = showOnlyFirstSignal ? longCross and not longCross[1] : longCross
showshortCross = showOnlyFirstSignal ? shortCross and not shortCross[1] : shortCross

upTriangleShape = shape.triangledown
upTriangleColor = #e57373
downTriangleShape = shape.triangleup
downTriangleColor = #81c784

plotshape(showBandCross ? showlongCross : na, title='Normal Band Cross Up', style=upTriangleShape, size=size.tiny, color=upTriangleColor, location=location.abovebar, transp=50)
plotshape(showBandCross ? showshortCross : na, title='Normal Band Cross Down', style=downTriangleShape, size=size.tiny, color=downTriangleColor, location=location.belowbar, transp=50)

// Plot free bars breakouts
longFreeBar = if bandsToUse == 'Tight'
    low >= upTightKeltnerBand
else if bandsToUse == 'Normal'
    low >= upKeltnerBand
else if bandsToUse == 'Extreme'
    low >= upExtremeKeltnerBand
shortFreeBar = if bandsToUse == 'Tight'
    high <= downTightKeltnerBand
else if bandsToUse == 'Normal'
    high <= downKeltnerBand
else if bandsToUse == 'Extreme'
    high <= downExtremeKeltnerBand

upStarColor = #e57373
downStarColor = #81c784

plotchar(showFreeBars ? longFreeBar : na, title='Free Bar Up', char='★', size=size.tiny, color=upStarColor, location=location.abovebar, transp=50)  //, display=display.none)
plotchar(showFreeBars ? shortFreeBar : na, title='Free Bar Down', char='★', size=size.tiny, color=downStarColor, location=location.belowbar, transp=50)  //, display=display.none)

